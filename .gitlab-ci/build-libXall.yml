# vim: set expandtab shiftwidth=2 tabstop=8 textwidth=0 filetype=yaml:
#
# WARNING: THIS FILE IS GENERATED, DO NOT EDIT
#
# This pipeline builds the given libX* project and all its dependencies.
# Use in the dependent project like this:
#
# libXi:
#   stage: build
#   trigger:
#     include:
#       - project: xorg/lib/libX11
#         ref: master
#         file: .gitlab-ci/build-libXall.yml
#     strategy: depend
#   variables:
#     PROJECT_NAME: $CI_PROJECT_NAME
#
# The job name and stage name don't matter. PROJECT_NAME must be passed
# through.
#


# This CI uses the freedesktop.org ci-templates.
# Please see the ci-templates documentation for details:
# https://freedesktop.pages.freedesktop.org/ci-templates/
.templates_sha: &template_sha c7702b1ae8507c5d5f34edcbf280f287ab541e8e # see https://docs.gitlab.com/ee/ci/yaml/#includefile


include:
  # Arch container builder template
  - project: 'freedesktop/ci-templates'
    ref: *template_sha
    file: '/templates/arch.yml'


stages:
  - sanity check
  - prep             # prep work like rebuilding the container images if there is a change
# Stages for the trigger jobs
  - libXau
  - libXdmcp
  - libX11
  - libXext
  - libdmx
  - libfontenc
  - libFS
  - libICE
  - libSM
  - libXt
  - libXmu
  - libXpm
  - libXaw
  - libXaw3d
  - libXfixes
  - libXcomposite
  - libXrender
  - libXdamage
  - libXcursor
  - libXfont
  - libXft
  - libXi
  - libXinerama
  - libxkbfile
  - libXrandr
  - libXRes
  - libXScrnSaver
  - libXtst
  - libXv
  - libXvMC
  - libXxf86dga
  - libXxf86vm


# Note: this pipeline is triggered from a different project and will inherit
# variable names from the parent pipeline. So we need to work around those
variables:
  OUR_UPSTREAM_REPO: 'xorg/lib/$PROJECT_NAME'
  # The tag should be updated each time the list of packages is updated.
  # Changing a tag forces the associated image to be rebuilt.
  # Note: the tag has no meaning, we use a date format purely for readability
  OUR_DISTRIBUTION_TAG: 'libXall-2020-11-24.2'
  # The package list is the list of all requires from all libX*, excluding the various libX* themselves
  OUR_DISTRIBUTION_PACKAGES: 'git gcc pkgconf autoconf automake make xorg-util-macros xtrans xorgproto libxcb xmlto gettext bison flex freetype2 libfontenc fontconfig asciidoc'


#
# We require PROJECT_NAME to be passed in from whatever triggers the pipeline
#
sanity check:
  stage: sanity check
  script:
    - |
      if [ x"$PROJECT_NAME" == x ]; then
        echo "PROJECT_NAME must be passed as variable from the triggering job";
        exit 1;
      fi
    - echo "Running pipeline for $PROJECT_NAME"

#
# This job is only run if the passed-in PROJECT_NAME doesn't match any of our libraries
#
fail for unknown project name:
  stage: sanity check
  script:
    - echo "Unknown PROJECT_NAME $PROJECT_NAME"
    - exit 1;
  rules:
    - if: $PROJECT_NAME =~ /libXau|libXdmcp|libX11|libXext|libdmx|libfontenc|libFS|libICE|libSM|libXt|libXmu|libXpm|libXaw|libXaw3d|libXfixes|libXcomposite|libXrender|libXdamage|libXcursor|libXfont|libXft|libXi|libXinerama|libxkbfile|libXrandr|libXRes|libXScrnSaver|libXtst|libXv|libXvMC|libXxf86dga|libXxf86vm/i
      when: never


#
# Build a container with the given tag and the packages pre-installed.
# This only happens if when the tag changes, otherwise the existing image is
# re-used.
#
# We only run this job for libX11 - the tag cannot change without updating the
# libX11 repo anyway.
#
container-prep:
  extends:
    - .fdo.container-build@arch
  stage: prep
  variables:
    GIT_STRATEGY: none
    FDO_DISTRIBUTION_PACKAGES: $OUR_DISTRIBUTION_PACKAGES
    FDO_DISTRIBUTION_TAG: $OUR_DISTRIBUTION_TAG
    FDO_UPSTREAM_REPO: $OUR_UPSTREAM_REPO
  rules:
    - if: $PROJECT_NAME =~ /libX11/i


#
# Build template for all jobs:
# For dependencies, the PROJECT_NAME differs from the CI_JOB_NAME
# and we clone the dependency's repo (and skip make distcheck).
#
# Where we're building for the project that triggered us, we use the existing
# git directory.
#
# The _inst directory is the prefix, it's passed on to the next job.
#
.build-template:
  extends:
    - .fdo.distribution-image@arch
  before_script:
    - |
      if [ "$PROJECT_NAME" != "$CI_JOB_NAME" ]; then
        rm -rf _gitdir;
        git clone --depth 1 $GIT_URL _gitdir;
        pushd _gitdir;
      fi
  script:
    - export PKG_CONFIG_PATH="$CI_PROJECT_DIR/_inst/lib/pkgconfig:$CI_PROJECT_DIR/_inst/share/pkgconfig:"
    - export LD_LIBRARY_PATH="$CI_PROJECT_DIR/_inst/lib"
    - mkdir -p $CI_PROJECT_DIR/_inst
    - autoreconf -ivf
    - mkdir _builddir
    - pushd _builddir > /dev/null
    - ../configure --disable-silent-rules $CONFIGURE_ARGS
    - make
    - |
      if [ "$PROJECT_NAME" == "$CI_JOB_NAME" ]; then
        make check && make distcheck;
      fi
    - make install
  variables:
    GIT_URL: https://gitlab.freedesktop.org/xorg/lib/$CI_JOB_NAME
    CONFIGURE_ARGS: "--prefix=$CI_PROJECT_DIR/_inst/"
    FDO_DISTRIBUTION_TAG: $OUR_DISTRIBUTION_TAG
  artifacts:
    paths:
      - _inst


#
# libX* build jobs
#
# These jobs are generated, see .gitlab-ci/build-libXall.template
# .gitlab-ci/build-libXall.template.config.yaml for the source files.
#
# The goal of these jobs is to have one place for all the libX* repositories
# to do some basic CI build testing. Those repositories will merely trigger
# this pipeline and otherwise have no custom code that needs to be maintained.
#
# This needs to be generated - each library has a set of dependencies and we need to build those first.
# But we don't want to build all libraries every time, so each job has a large
# regex to trigger only those builds a libX* actually relies on.


libxau:
  stage: libXau
  extends:
    - .build-template
  rules:
    - if: $PROJECT_NAME =~ /libXau|libX11|libXext|libdmx|libfontenc|libFS|libICE|libSM|libXt|libXmu|libXpm|libXaw|libXaw3d|libXfixes|libXcomposite|libXrender|libXdamage|libXcursor|libXfont|libXft|libXi|libXinerama|libxkbfile|libXrandr|libXRes|libXScrnSaver|libXtst|libXv|libXvMC|libXxf86dga|libXxf86vm/i

libxdmcp:
  stage: libXdmcp
  extends:
    - .build-template
  rules:
    - if: $PROJECT_NAME =~ /libXdmcp|libX11|libXext|libdmx|libfontenc|libFS|libICE|libSM|libXt|libXmu|libXpm|libXaw|libXaw3d|libXfixes|libXcomposite|libXrender|libXdamage|libXcursor|libXfont|libXft|libXi|libXinerama|libxkbfile|libXrandr|libXRes|libXScrnSaver|libXtst|libXv|libXvMC|libXxf86dga|libXxf86vm/i

libx11:
  stage: libX11
  extends:
    - .build-template
  needs:
    - libxau
    - libxdmcp
  rules:
    - if: $PROJECT_NAME =~ /libX11|libXext|libdmx|libfontenc|libFS|libICE|libSM|libXt|libXmu|libXpm|libXaw|libXaw3d|libXfixes|libXcomposite|libXrender|libXdamage|libXcursor|libXfont|libXft|libXi|libXinerama|libxkbfile|libXrandr|libXRes|libXScrnSaver|libXtst|libXv|libXvMC|libXxf86dga|libXxf86vm/i

libxext:
  stage: libXext
  extends:
    - .build-template
  needs:
    - libx11
    - libxau
    - libxdmcp
  rules:
    - if: $PROJECT_NAME =~ /libXext|libXmu|libXpm|libXaw|libXaw3d|libXfixes|libXcomposite|libXrender|libXdamage|libXcursor|libXfont|libXft|libXi|libXinerama|libxkbfile|libXrandr|libXRes|libXScrnSaver|libXtst|libXv|libXvMC|libXxf86dga|libXxf86vm/i

libdmx:
  stage: libdmx
  extends:
    - .build-template
  needs:
    - libx11
    - libxau
    - libxdmcp
  rules:
    - if: $PROJECT_NAME =~ /libdmx/i

libfontenc:
  stage: libfontenc
  extends:
    - .build-template
  needs:
    - libx11
    - libxau
    - libxdmcp
  rules:
    - if: $PROJECT_NAME =~ /libfontenc/i

libfs:
  stage: libFS
  extends:
    - .build-template
  needs:
    - libx11
    - libxau
    - libxdmcp
  rules:
    - if: $PROJECT_NAME =~ /libFS/i

libice:
  stage: libICE
  extends:
    - .build-template
  needs:
    - libx11
    - libxau
    - libxdmcp
  rules:
    - if: $PROJECT_NAME =~ /libICE|libSM|libXt|libXmu|libXaw|libXaw3d/i

libsm:
  stage: libSM
  extends:
    - .build-template
  needs:
    - libx11
    - libxau
    - libxdmcp
    - libice
  rules:
    - if: $PROJECT_NAME =~ /libSM|libXt|libXmu|libXaw|libXaw3d/i

libxt:
  stage: libXt
  extends:
    - .build-template
  needs:
    - libx11
    - libxau
    - libxdmcp
    - libsm
    - libice
  rules:
    - if: $PROJECT_NAME =~ /libXt|libXmu|libXaw|libXaw3d/i

libxmu:
  stage: libXmu
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
    - libxt
    - libsm
    - libice
  rules:
    - if: $PROJECT_NAME =~ /libXmu|libXaw|libXaw3d/i

libxpm:
  stage: libXpm
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
  rules:
    - if: $PROJECT_NAME =~ /libXpm|libXaw|libXaw3d/i

libxaw:
  stage: libXaw
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
    - libxt
    - libsm
    - libice
    - libxmu
    - libxpm
  rules:
    - if: $PROJECT_NAME =~ /libXaw/i

libxaw3d:
  stage: libXaw3d
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
    - libxt
    - libsm
    - libice
    - libxmu
    - libxpm
  rules:
    - if: $PROJECT_NAME =~ /libXaw3d/i

libxfixes:
  stage: libXfixes
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
  rules:
    - if: $PROJECT_NAME =~ /libXfixes|libXcomposite|libXdamage|libXcursor|libXi|libXtst/i

libxcomposite:
  stage: libXcomposite
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
    - libxfixes
  rules:
    - if: $PROJECT_NAME =~ /libXcomposite/i

libxrender:
  stage: libXrender
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
  rules:
    - if: $PROJECT_NAME =~ /libXrender|libXcursor|libXft|libXrandr/i

libxdamage:
  stage: libXdamage
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
    - libxfixes
  rules:
    - if: $PROJECT_NAME =~ /libXdamage/i

libxcursor:
  stage: libXcursor
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
    - libxfixes
    - libxrender
  rules:
    - if: $PROJECT_NAME =~ /libXcursor/i

libxfont:
  stage: libXfont
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
  rules:
    - if: $PROJECT_NAME =~ /libXfont/i

libxft:
  stage: libXft
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
    - libxrender
  rules:
    - if: $PROJECT_NAME =~ /libXft/i

libxi:
  stage: libXi
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
    - libxfixes
  rules:
    - if: $PROJECT_NAME =~ /libXi|libXtst/i

libxinerama:
  stage: libXinerama
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
  rules:
    - if: $PROJECT_NAME =~ /libXinerama/i

libxkbfile:
  stage: libxkbfile
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
  rules:
    - if: $PROJECT_NAME =~ /libxkbfile/i

libxrandr:
  stage: libXrandr
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
    - libxrender
  rules:
    - if: $PROJECT_NAME =~ /libXrandr/i

libxres:
  stage: libXRes
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
  rules:
    - if: $PROJECT_NAME =~ /libXRes/i

libxscrnsaver:
  stage: libXScrnSaver
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
  rules:
    - if: $PROJECT_NAME =~ /libXScrnSaver/i

libxtst:
  stage: libXtst
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
    - libxi
    - libxfixes
  rules:
    - if: $PROJECT_NAME =~ /libXtst/i

libxv:
  stage: libXv
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
  rules:
    - if: $PROJECT_NAME =~ /libXv|libXvMC/i

libxvmc:
  stage: libXvMC
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
    - libxv
  rules:
    - if: $PROJECT_NAME =~ /libXvMC/i

libxxf86dga:
  stage: libXxf86dga
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
  rules:
    - if: $PROJECT_NAME =~ /libXxf86dga/i

libxxf86vm:
  stage: libXxf86vm
  extends:
    - .build-template
  needs:
    - libxext
    - libx11
    - libxau
    - libxdmcp
  rules:
    - if: $PROJECT_NAME =~ /libXxf86vm/i

