# vim: set expandtab shiftwidth=2 tabstop=8 textwidth=0 filetype=yaml:
#
# This CI uses the freedesktop.org ci-templates.
# Please see the ci-templates documentation for details:
# https://freedesktop.pages.freedesktop.org/ci-templates/

.templates_sha: &template_sha 16f790f93f893394b70d7048fb0e8a981ceaa3c5 # see https://docs.gitlab.com/ee/ci/yaml/#includefile


include:
  # Arch container builder template
  - project: 'freedesktop/ci-templates'
    ref: *template_sha
    file: '/templates/arch.yml'
  # the ci-fairy tool
  - project: 'freedesktop/ci-templates'
    ref: *template_sha
    file: '/templates/ci-fairy.yml'


stages:
  - prep             # prep work like rebuilding the container images if there is a change
  - build            # for actually building and testing things in a container
  - dependencies     # full dependencies build
  - deploy
  - other libraries  # pipelines for other libX* build tests


variables:
  LIBX11_UPSTREAM_REPO: 'xorg/lib/libX11'
  # The tag should be updated each time the list of packages is updated.
  # Changing a tag forces the associated image to be rebuilt.
  # Note: the tag has no meaning, we use a date format purely for readability
  LIBX11_DISTRIBUTION_TAG:  '2020-11-16.0'
  LIBX11_DISTRIBUTION_PACKAGES:  'git gcc pkgconf autoconf automake make xorg-util-macros xtrans xorgproto libxcb'


#
# Template for jobs that should *not* run when we're testing the other libX*
# runs.
.libX11 only job:
  rules:
    - if: $LIBRARY_NAME == null

#
# Verify that commit messages are as expected, signed-off, etc.
#
check-commits:
  extends:
    - .fdo.ci-fairy
  stage: prep
  script:
    - ci-fairy check-commits --signed-off-by --junit-xml=results.xml
  variables:
    GIT_DEPTH: 100
  artifacts:
    reports:
      junit: results.xml
  variables:
    FDO_UPSTREAM_REPO: $LIBX11_UPSTREAM_REPO
  rules:
    - if: $CI_PROJECT_PATH =~ /xorg.lib.libX11/i && $CI_COMMIT_REF_NAME == 'master'
      when: never
    - if: $LIBRARY_NAME == null
      when: never
    - when: always

#
# Verify that the merge request has the allow-collaboration checkbox ticked
#
check-merge-request:
  extends:
    - .fdo.ci-fairy
    - .libX11 only job
  stage: deploy
  script:
    - ci-fairy check-merge-request --require-allow-collaboration --junit-xml=results.xml
  artifacts:
    when: on_failure
    reports:
      junit: results.xml
  allow_failure: true
  variables:
    FDO_UPSTREAM_REPO: $LIBX11_UPSTREAM_REPO


#
# Ensure that the CI script doesn't differ from the template
#
check-CI-script:
  extends:
    - .fdo.ci-fairy
  stage: prep
  script:
    - ci-fairy generate-template --verify --config .gitlab-ci/build-libXall.config.yml --output-file .gitlab-ci/build-libXall.yml .gitlab-ci/build-libXall.template && exit 0 || true
    - echo "Committed gitlab-ci.yml differs from generated gitlab-ci.yml. Please verify"
    - exit 1


#
# Build a container with the given tag and the packages pre-installed.
# This only happens if when the tag changes, otherwise the existing image is
# re-used.
#
container-prep:
  extends:
    - .fdo.container-build@arch
    - .libX11 only job
  stage: prep
  variables:
    GIT_STRATEGY: none
    FDO_DISTRIBUTION_TAG: $LIBX11_DISTRIBUTION_TAG
    FDO_DISTRIBUTION_PACKAGES: $LIBX11_DISTRIBUTION_PACKAGES
    FDO_UPSTREAM_REPO: $LIBX11_UPSTREAM_REPO


#
# The default build, runs on the image built above.
#
build:
  stage: build
  extends:
    - .fdo.distribution-image@arch
    - .libX11 only job
  script:
    - autoreconf -ivf
    - mkdir _builddir
    - pushd _builddir > /dev/null
    - ../configure --disable-silent-rules
    - make
    - make check
    - make distcheck
    - popd > /dev/null
  variables:
    FDO_DISTRIBUTION_TAG: $LIBX11_DISTRIBUTION_TAG


#
# Build the libX11 dependency chain
#
# This is necessary to generate the image that all the other libs rely on.
# This job is only run if LIBRARY_NAME is unset, i.e. during a normal libX11
# pipeline.
#
libX11 dependency build:
  stage: other libraries
  trigger:
    include:
      - local: .gitlab-ci/build-libXall.yml
    strategy: depend
  variables:
    PROJECT_NAME: libX11
  rules:
    - if: $LIBRARY_NAME == null

#
# Build the given LIBRARY_NAME including all its dependencies
#
# This job exists primarily for testing purposes. To run this job, start a new
# pipeline in the Web UI or via curl and set LIBRARY_NAME to the library you
# want to run.
dependency build:
  stage: other libraries
  trigger:
    include:
      - local: .gitlab-ci/build-libXall.yml
    strategy: depend
  variables:
    PROJECT_NAME: "$LIBRARY_NAME"
  rules:
    - if: $LIBRARY_NAME
